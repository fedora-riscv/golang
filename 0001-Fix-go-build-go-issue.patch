From 2084eeedcd9b38dd3e48c7e134fc783228a76bfc Mon Sep 17 00:00:00 2001
From: "xiaoguang.xing" <xiaoguang.xing@sophgo.com>
Date: Thu, 18 May 2023 09:41:55 +0800
Subject: [PATCH] Fix go build go issue

issue:
1) all go thread to sleep
2) checkdead
3) signal 11
4) others

workaround:
1) add lrsc to amo*
2) add lrsc to lrw/scw lrd/scd
3) add iorw to fence
---
 src/cmd/internal/obj/riscv/inst.go | 46 +++++++++++++++---------------
 1 file changed, 23 insertions(+), 23 deletions(-)

diff --git a/src/cmd/internal/obj/riscv/inst.go b/src/cmd/internal/obj/riscv/inst.go
index 891199e0e0..ac066de1d5 100644
--- a/src/cmd/internal/obj/riscv/inst.go
+++ b/src/cmd/internal/obj/riscv/inst.go
@@ -113,7 +113,7 @@ func encode(a obj.As) *inst {
 	case ASD:
 		return &inst{0x23, 0x3, 0x0, 0, 0x0}
 	case AFENCE:
-		return &inst{0xf, 0x0, 0x0, 0, 0x0}
+		return &inst{0xf, 0x0, 0x1f, 0, 0x7}
 	case AFENCEI:
 		return &inst{0xf, 0x1, 0x0, 0, 0x0}
 	case AMUL:
@@ -143,49 +143,49 @@ func encode(a obj.As) *inst {
 	case AREMUW:
 		return &inst{0x3b, 0x7, 0x0, 32, 0x1}
 	case AAMOADDW:
-		return &inst{0x2f, 0x2, 0x0, 0, 0x0}
+		return &inst{0x2f, 0x2, 0x0, 0, 0x3}
 	case AAMOXORW:
-		return &inst{0x2f, 0x2, 0x0, 512, 0x10}
+		return &inst{0x2f, 0x2, 0x0, 512, 0x13}
 	case AAMOORW:
-		return &inst{0x2f, 0x2, 0x0, 1024, 0x20}
+		return &inst{0x2f, 0x2, 0x0, 1024, 0x23}
 	case AAMOANDW:
-		return &inst{0x2f, 0x2, 0x0, 1536, 0x30}
+		return &inst{0x2f, 0x2, 0x0, 1536, 0x33}
 	case AAMOMINW:
-		return &inst{0x2f, 0x2, 0x0, -2048, 0x40}
+		return &inst{0x2f, 0x2, 0x0, -2048, 0x43}
 	case AAMOMAXW:
-		return &inst{0x2f, 0x2, 0x0, -1536, 0x50}
+		return &inst{0x2f, 0x2, 0x0, -1536, 0x53}
 	case AAMOMINUW:
-		return &inst{0x2f, 0x2, 0x0, -1024, 0x60}
+		return &inst{0x2f, 0x2, 0x0, -1024, 0x63}
 	case AAMOMAXUW:
-		return &inst{0x2f, 0x2, 0x0, -512, 0x70}
+		return &inst{0x2f, 0x2, 0x0, -512, 0x73}
 	case AAMOSWAPW:
-		return &inst{0x2f, 0x2, 0x0, 128, 0x4}
+		return &inst{0x2f, 0x2, 0x0, 128, 0x7}
 	case ALRW:
-		return &inst{0x2f, 0x2, 0x0, 256, 0x8}
+		return &inst{0x2f, 0x2, 0x0, 256, 0xb}
 	case ASCW:
-		return &inst{0x2f, 0x2, 0x0, 384, 0xc}
+		return &inst{0x2f, 0x2, 0x0, 384, 0xf}
 	case AAMOADDD:
-		return &inst{0x2f, 0x3, 0x0, 0, 0x0}
+		return &inst{0x2f, 0x3, 0x0, 0, 0x3}
 	case AAMOXORD:
-		return &inst{0x2f, 0x3, 0x0, 512, 0x10}
+		return &inst{0x2f, 0x3, 0x0, 512, 0x13}
 	case AAMOORD:
-		return &inst{0x2f, 0x3, 0x0, 1024, 0x20}
+		return &inst{0x2f, 0x3, 0x0, 1024, 0x23}
 	case AAMOANDD:
-		return &inst{0x2f, 0x3, 0x0, 1536, 0x30}
+		return &inst{0x2f, 0x3, 0x0, 1536, 0x33}
 	case AAMOMIND:
-		return &inst{0x2f, 0x3, 0x0, -2048, 0x40}
+		return &inst{0x2f, 0x3, 0x0, -2048, 0x43}
 	case AAMOMAXD:
-		return &inst{0x2f, 0x3, 0x0, -1536, 0x50}
+		return &inst{0x2f, 0x3, 0x0, -1536, 0x53}
 	case AAMOMINUD:
-		return &inst{0x2f, 0x3, 0x0, -1024, 0x60}
+		return &inst{0x2f, 0x3, 0x0, -1024, 0x63}
 	case AAMOMAXUD:
-		return &inst{0x2f, 0x3, 0x0, -512, 0x70}
+		return &inst{0x2f, 0x3, 0x0, -512, 0x73}
 	case AAMOSWAPD:
-		return &inst{0x2f, 0x3, 0x0, 128, 0x4}
+		return &inst{0x2f, 0x3, 0x0, 128, 0x7}
 	case ALRD:
-		return &inst{0x2f, 0x3, 0x0, 256, 0x8}
+		return &inst{0x2f, 0x3, 0x0, 256, 0xb}
 	case ASCD:
-		return &inst{0x2f, 0x3, 0x0, 384, 0xc}
+		return &inst{0x2f, 0x3, 0x0, 384, 0xf}
 	case AECALL:
 		return &inst{0x73, 0x0, 0x0, 0, 0x0}
 	case AEBREAK:
-- 
2.34.1

